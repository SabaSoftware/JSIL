var tests = [
{id: "SimpleTestCases\\AbstractMethods.cs", url: "../Tests/SimpleTestCases/AbstractMethods.cs.out", expectedResult: "Method\n"},
{id: "SimpleTestCases\\Array2D.cs", url: "../Tests/SimpleTestCases/Array2D.cs.out", expectedResult: "6\n1\n2\n3\n4\n5\n6\n"},
{id: "SimpleTestCases\\ArrayClear.cs", url: "../Tests/SimpleTestCases/ArrayClear.cs.out", expectedResult: "A\nA\nA\nA\nB\nC\n"},
{id: "SimpleTestCases\\ArrayClone.cs", url: "../Tests/SimpleTestCases/ArrayClone.cs.out", expectedResult: "1\n0\n0\n0\n0\n0\n2\n0\n0\n0\n"},
{id: "SimpleTestCases\\ArrayCopy5Arg.cs", url: "../Tests/SimpleTestCases/ArrayCopy5Arg.cs.out", expectedResult: "016b [00000203040500000000000000000000]\n"},
{id: "SimpleTestCases\\ArrayCopyEnum.cs", url: "../Tests/SimpleTestCases/ArrayCopyEnum.cs.out", expectedResult: "A\nB\nC\n"},
{id: "SimpleTestCases\\ArrayDefaultValues.cs", url: "../Tests/SimpleTestCases/ArrayDefaultValues.cs.out", expectedResult: "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n"},
{id: "SimpleTestCases\\ArrayDefaultValues2.cs", url: "../Tests/SimpleTestCases/ArrayDefaultValues2.cs.out", expectedResult: "false\nfalse\nfalse\nfalse\n\0\n\0\n\0\n\0\nnull\nnull\nnull\nnull\n"},
{id: "SimpleTestCases\\ArrayEnumerator.cs", url: "../Tests/SimpleTestCases/ArrayEnumerator.cs.out", expectedResult: "0\n1\n2\n3\n4\n"},
{id: "SimpleTestCases\\ArrayFromInt64.cs", url: "../Tests/SimpleTestCases/ArrayFromInt64.cs.out", expectedResult: "1024\n0\n"},
{id: "SimpleTestCases\\ArrayICollection.cs", url: "../Tests/SimpleTestCases/ArrayICollection.cs.out", expectedResult: "Count: 5\nCopyTo: 0; 2; 3; 5; 7; 11; 0\n"},
{id: "SimpleTestCases\\ArrayListIndexer.cs", url: "../Tests/SimpleTestCases/ArrayListIndexer.cs.out", expectedResult: "3\nzero\none\ntwo\none-updated\n"},
{id: "SimpleTestCases\\ArrayLongLength.cs", url: "../Tests/SimpleTestCases/ArrayLongLength.cs.out", expectedResult: "20\n20\n"},
{id: "SimpleTestCases\\ArrayOfArrays.cs", url: "../Tests/SimpleTestCases/ArrayOfArrays.cs.out", expectedResult: "1\n2\n3\n4\n5\n6\n"},
{id: "SimpleTestCases\\ArrayOfNullable.cs", url: "../Tests/SimpleTestCases/ArrayOfNullable.cs.out", expectedResult: "4\n1\n"},
{id: "SimpleTestCases\\ArrayOfStructsDefaultValues.cs", url: "../Tests/SimpleTestCases/ArrayOfStructsDefaultValues.cs.out", expectedResult: "0\n0\n0\n0\n0\n"},
{id: "SimpleTestCases\\ArrayOverload.cs", url: "../Tests/SimpleTestCases/ArrayOverload.cs.out", expectedResult: "OverloadedMethod(<void>)\nOverloadedMethod(<int>)\nOverloadedMethod(<int[]>)\n"},
{id: "SimpleTestCases\\ArrayResize.cs", url: "../Tests/SimpleTestCases/ArrayResize.cs.out", expectedResult: "The string array initially contains the following values:\n   [0] : The\n   [1] : quick\n   [2] : brown\n   [3] : fox\n   [4] : jumps\n   [5] : over\n   [6] : the\n   [7] : lazy\n   [8] : dog\n\nAfter resizing to a larger size, \nthe string array contains the following values:\n   [0] : The\n   [1] : quick\n   [2] : brown\n   [3] : fox\n   [4] : jumps\n   [5] : over\n   [6] : the\n   [7] : lazy\n   [8] : dog\n   [9] : \n   [10] : \n   [11] : \n   [12] : \n   [13] : \n\nAfter resizing to a smaller size, \nthe string array contains the following values:\n   [0] : The\n   [1] : quick\n   [2] : brown\n   [3] : fox\n\n10\n20\n0\n"},
{id: "SimpleTestCases\\Arrays.cs", url: "../Tests/SimpleTestCases/Arrays.cs.out", expectedResult: "0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n"},
{id: "SimpleTestCases\\AssemblyGetType.cs", url: "../Tests/SimpleTestCases/AssemblyGetType.cs.out", expectedResult: "CustomType\n"},
{id: "SimpleTestCases\\AssignNewToOut.cs", url: "../Tests/SimpleTestCases/AssignNewToOut.cs.out", expectedResult: "{1, 1, 1, 1} {2, 2, 2, 2} {2, 2, 2, 2}\n"},
{id: "SimpleTestCases\\AsWithGenericParameter.cs", url: "../Tests/SimpleTestCases/AsWithGenericParameter.cs.out", expectedResult: "False\nFalse\n"},
{id: "SimpleTestCases\\AsyncAwait.cs", url: "../Tests/SimpleTestCases/AsyncAwait.cs.out", expectedResult: "Main thread\nMain: Delay 1 complete\nAfter delay 1\nMain: Delay 2 complete\nAfter delay 2\nContinuation:AsyncMethod result\n"},
{id: "SimpleTestCases\\AutoProperties.cs", url: "../Tests/SimpleTestCases/AutoProperties.cs.out", expectedResult: "A = 1, B = 0\nA = 1, B = 0\n"},
{id: "SimpleTestCases\\BaseAutoProperties.cs", url: "../Tests/SimpleTestCases/BaseAutoProperties.cs.out", expectedResult: "instance.A = 8, instance.BaseA = 4\ninstance.B = 8, instance.BaseB = 4\n"},
{id: "SimpleTestCases\\BaseProperties.cs", url: "../Tests/SimpleTestCases/BaseProperties.cs.out", expectedResult: "instance.A = 8, instance.BaseA = 4\n"},
{id: "SimpleTestCases\\BasePropertyInvocation.cs", url: "../Tests/SimpleTestCases/BasePropertyInvocation.cs.out", expectedResult: "instance.A = 2, instance.BaseA = 4\n"},
{id: "SimpleTestCases\\BasicLoops.cs", url: "../Tests/SimpleTestCases/BasicLoops.cs.out", expectedResult: "0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n"},
{id: "SimpleTestCases\\BitConverter.cs", url: "../Tests/SimpleTestCases/BitConverter.cs.out", expectedResult: "002b [7B00]\n002b [7B00]\n002b [7B00]\n002b [7B00]\n004b [7B000000]\n004b [7B000000]\n008b [7B00000000000000]\n008b [7B00000000000000]\n004b [A4709D3F]\n008b [AE47E17A14AEF33F]\n123\n123\n123\n123\n123\n123\n001.23\n001.23\n"},
{id: "SimpleTestCases\\BooleanCasts.cs", url: "../Tests/SimpleTestCases/BooleanCasts.cs.out", expectedResult: "False True\n"},
{id: "SimpleTestCases\\BooleanFieldDefaults.cs", url: "../Tests/SimpleTestCases/BooleanFieldDefaults.cs.out", expectedResult: "False False True\nFalse False True\n"},
{id: "SimpleTestCases\\CanWriteOrRead.cs", url: "../Tests/SimpleTestCases/CanWriteOrRead.cs.out", expectedResult: "ReadOnly 1 0\nWriteOnly 0 1\nReadWrite 1 1\n"},
{id: "SimpleTestCases\\CastEnumTypeToRuntimeType.cs", url: "../Tests/SimpleTestCases/CastEnumTypeToRuntimeType.cs.out", expectedResult: "1\nEnm\n1\nCls\n1\nIface\n1\nSystem.Object\n"},
{id: "SimpleTestCases\\CastIntegerConstantToEnum.cs", url: "../Tests/SimpleTestCases/CastIntegerConstantToEnum.cs.out", expectedResult: "B 127\n"},
{id: "SimpleTestCases\\CastOtherEnumToEnumConstant.cs", url: "../Tests/SimpleTestCases/CastOtherEnumToEnumConstant.cs.out", expectedResult: "A\n10240\n"},
{id: "SimpleTestCases\\CastToByteTruncation.cs", url: "../Tests/SimpleTestCases/CastToByteTruncation.cs.out", expectedResult: "(byte)-1024 == 0\n(byte)-255 == 1\n(byte)-32 == 224\n(byte)1 == 1\n(byte)255 == 255\n(byte)1024 == 0\n"},
{id: "SimpleTestCases\\CharArithmetic.cs", url: "../Tests/SimpleTestCases/CharArithmetic.cs.out", expectedResult: "0\n1\n2\n3\n4\n5\n6\n7\n8\n9\na\nb\nc\nd\ne\nf\n"},
{id: "SimpleTestCases\\CharIs.cs", url: "../Tests/SimpleTestCases/CharIs.cs.out", expectedResult: "32\nIsWhiteSpace\n\n52\nIsDigit\nIsLetterOrDigit\n\n74\nIsLetter\nIsLetterOrDigit\n\n115\nIsLetter\nIsLetterOrDigit\n\n13\nIsControl\nIsWhiteSpace\n\n55297\nIsSurrogate\n\n"},
{id: "SimpleTestCases\\CheckedIntegerArithmetic.cs", url: "../Tests/SimpleTestCases/CheckedIntegerArithmetic.cs.out", expectedResult: "Overflow detected\nOverflow detected\nOverflow detected\n"},
{id: "SimpleTestCases\\ClassEquals.cs", url: "../Tests/SimpleTestCases/ClassEquals.cs.out", expectedResult: "a==a: True, a==b: False, a==c: True\na==a: True, a==b: False, a==c: True\n"},
{id: "SimpleTestCases\\ClassMemberwiseClone.cs", url: "../Tests/SimpleTestCases/ClassMemberwiseClone.cs.out", expectedResult: "123\n"},
{id: "SimpleTestCases\\CoercedArrayLength.cs", url: "../Tests/SimpleTestCases/CoercedArrayLength.cs.out", expectedResult: "OK\n"},
{id: "SimpleTestCases\\CollectionAndObjectInitializers.cs", url: "../Tests/SimpleTestCases/CollectionAndObjectInitializers.cs.out", expectedResult: "first\na\nsecond\nb\nfirst\na\nsecond\nb\n"},
{id: "SimpleTestCases\\CollectionInitializers.cs", url: "../Tests/SimpleTestCases/CollectionInitializers.cs.out", expectedResult: "1\n2\n3\n4\n5\n6\n"},
{id: "SimpleTestCases\\ComplexRefOverload.cs", url: "../Tests/SimpleTestCases/ComplexRefOverload.cs.out", expectedResult: "Method(<ref object>, <object>, <object>)\na\nMethod(<ref object>, <object>, <object>)\nb\nMethod(<ref int>, <int>, <int>)\n1\nMethod(<ref int>, <int>, <int>)\n2\n"},
{id: "SimpleTestCases\\CompoundAssignmentToMultiDimArray.cs", url: "../Tests/SimpleTestCases/CompoundAssignmentToMultiDimArray.cs.out", expectedResult: "1\n2\n0\n0\n2\n1\n2\n0\n0\n2\n1\n2\n0\n0\n2\n1\n"},
{id: "SimpleTestCases\\CompoundAssignmentWithCustomOperator.cs", url: "../Tests/SimpleTestCases/CompoundAssignmentWithCustomOperator.cs.out", expectedResult: ""},
{id: "SimpleTestCases\\Constants.cs", url: "../Tests/SimpleTestCases/Constants.cs.out", expectedResult: "A = 2, CustomType = A = 1\n"},
{id: "SimpleTestCases\\Constructors.cs", url: "../Tests/SimpleTestCases/Constructors.cs.out", expectedResult: "A = 1, B = 2\n"},
{id: "SimpleTestCases\\Constructors.vb", url: "../Tests/SimpleTestCases/Constructors.vb.out", expectedResult: "A = 1, B = 1\n"},
{id: "SimpleTestCases\\ConvertEnum.cs", url: "../Tests/SimpleTestCases/ConvertEnum.cs.out", expectedResult: "1\n2\n"},
{id: "SimpleTestCases\\ConvertObject.cs", url: "../Tests/SimpleTestCases/ConvertObject.cs.out", expectedResult: "System.Object\nIt works!\nfalse\n0\n\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\nnull\ntrue\n97\nHello!\n6\n1\n-1\n2\n-2\n3\n-3\n4\n-4\n5.55\n6.66\nIt works!\nA\n"},
{id: "SimpleTestCases\\CustomEnumerator.cs", url: "../Tests/SimpleTestCases/CustomEnumerator.cs.out", expectedResult: "0\n1\n2\n3\n4\n5\n6\n7\n8\n9\nDisposed\n"},
{id: "SimpleTestCases\\CustomEvents.cs", url: "../Tests/SimpleTestCases/CustomEvents.cs.out", expectedResult: "Add System.Action`1[System.Int32]\nAdd System.Action`1[System.Int32]\nRemove System.Action`1[System.Int32]\nRemove System.Action`1[System.Int32]\n"},
{id: "SimpleTestCases\\CustomExceptions.cs", url: "../Tests/SimpleTestCases/CustomExceptions.cs.out", expectedResult: "Caught: CustomException: Exception of type 'CustomException' was thrown.\r\n"},
{id: "SimpleTestCases\\CustomOperators.cs", url: "../Tests/SimpleTestCases/CustomOperators.cs.out", expectedResult: "5\n-3\n"},
{id: "SimpleTestCases\\CustomProperties.cs", url: "../Tests/SimpleTestCases/CustomProperties.cs.out", expectedResult: "A = 1, _A = 2\nA = 4, _A = 8\nA = 2, _A = 4\nA = 4, _A = 8\n"},
{id: "SimpleTestCases\\DecimalCast.cs", url: "../Tests/SimpleTestCases/DecimalCast.cs.out", expectedResult: "123.45\n"},
{id: "SimpleTestCases\\DecimalCopy.cs", url: "../Tests/SimpleTestCases/DecimalCopy.cs.out", expectedResult: "1.0 2.0 3.0\n3.0 2.0 5.0\n"},
{id: "SimpleTestCases\\DecimalEquality.cs", url: "../Tests/SimpleTestCases/DecimalEquality.cs.out", expectedResult: "It works!\n"},
{id: "SimpleTestCases\\Decimals.cs", url: "../Tests/SimpleTestCases/Decimals.cs.out", expectedResult: "1.00, 0.50, 2.00, 1.00\n"},
{id: "SimpleTestCases\\DefaultToString.cs", url: "../Tests/SimpleTestCases/DefaultToString.cs.out", expectedResult: "System.Object\nCustomType\n"},
{id: "SimpleTestCases\\DefaultValue.cs", url: "../Tests/SimpleTestCases/DefaultValue.cs.out", expectedResult: "False\n1\n0\n0\nTrue\nTrue\n0\n"},
{id: "SimpleTestCases\\DelegateFieldInitializer.cs", url: "../Tests/SimpleTestCases/DelegateFieldInitializer.cs.out", expectedResult: "Hello\n"},
{id: "SimpleTestCases\\DelegateFieldInitializer2.cs", url: "../Tests/SimpleTestCases/DelegateFieldInitializer2.cs.out", expectedResult: ""},
{id: "SimpleTestCases\\DelegateRemoveAdvanced.cs", url: "../Tests/SimpleTestCases/DelegateRemoveAdvanced.cs.out", expectedResult: "true\nfalse\ntrue\ntrue\nfalse\ntrue\n"},
{id: "SimpleTestCases\\Delegates.cs", url: "../Tests/SimpleTestCases/Delegates.cs.out", expectedResult: "a(1)\nb(2)\nPrintNumber(3)\n"},
{id: "SimpleTestCases\\DiagnosticsTrace.cs", url: "../Tests/SimpleTestCases/DiagnosticsTrace.cs.out", expectedResult: ""},
{id: "SimpleTestCases\\EnumBaseType.cs", url: "../Tests/SimpleTestCases/EnumBaseType.cs.out", expectedResult: "System.Enum\ntrue\n"},
{id: "SimpleTestCases\\EnumCompare.cs", url: "../Tests/SimpleTestCases/EnumCompare.cs.out", expectedResult: "true\n"},
{id: "SimpleTestCases\\EnumDefaults.cs", url: "../Tests/SimpleTestCases/EnumDefaults.cs.out", expectedResult: "One\n0\nTwo\nOne\nDefault\nDefault\nTwo\n"},
{id: "SimpleTestCases\\EnumerableCast.cs", url: "../Tests/SimpleTestCases/EnumerableCast.cs.out", expectedResult: "1.23\n4.56\n7.89\n1.23\n4.56\n7.89\nPass\n"},
{id: "SimpleTestCases\\EnumerableElementAt.cs", url: "../Tests/SimpleTestCases/EnumerableElementAt.cs.out", expectedResult: "1\n2\n4\n1\n2\n4\n0\n0\n"},
{id: "SimpleTestCases\\EnumerableFirst.cs", url: "../Tests/SimpleTestCases/EnumerableFirst.cs.out", expectedResult: "0\n1\n1\n0\n0\n3\n"},
{id: "SimpleTestCases\\EnumerableRange.cs", url: "../Tests/SimpleTestCases/EnumerableRange.cs.out", expectedResult: "0\n1\n2\n3\n4\n"},
{id: "SimpleTestCases\\EnumerableStringMethod.cs", url: "../Tests/SimpleTestCases/EnumerableStringMethod.cs.out", expectedResult: "2\n"},
{id: "SimpleTestCases\\EnumerableSum.cs", url: "../Tests/SimpleTestCases/EnumerableSum.cs.out", expectedResult: "0050.3811\n0037\n"},
{id: "SimpleTestCases\\EnumerableToList.cs", url: "../Tests/SimpleTestCases/EnumerableToList.cs.out", expectedResult: "4\nfoo\n"},
{id: "SimpleTestCases\\EnumerableWhere.cs", url: "../Tests/SimpleTestCases/EnumerableWhere.cs.out", expectedResult: "1\n3\n5\n7\n9\n"},
{id: "SimpleTestCases\\EnumerateStringAsChars.cs", url: "../Tests/SimpleTestCases/EnumerateStringAsChars.cs.out", expectedResult: "a\nb\nc\nd\ne\nf\ng\nh\n"},
{id: "SimpleTestCases\\EnumGetValuesLoop.cs", url: "../Tests/SimpleTestCases/EnumGetValuesLoop.cs.out", expectedResult: "Fhp\nSmooth\nNotched\n"},
{id: "SimpleTestCases\\EnumIConvertible.cs", url: "../Tests/SimpleTestCases/EnumIConvertible.cs.out", expectedResult: "1\n1\n"},
{id: "SimpleTestCases\\EnumInPlaceAdd.cs", url: "../Tests/SimpleTestCases/EnumInPlaceAdd.cs.out", expectedResult: "Up\nLeft\nUp\nUp\n"},
{id: "SimpleTestCases\\EnumPrePostIncrement.cs", url: "../Tests/SimpleTestCases/EnumPrePostIncrement.cs.out", expectedResult: "Down\nDown\nDown\nLeft\nDown\nDown\nDown\nUp\n"},
{id: "SimpleTestCases\\EnumToBooleanWithoutZeroValue.cs", url: "../Tests/SimpleTestCases/EnumToBooleanWithoutZeroValue.cs.out", expectedResult: "0 1\n"},
{id: "SimpleTestCases\\EventHandlerSample.cs", url: "../Tests/SimpleTestCases/EventHandlerSample.cs.out", expectedResult: "This is called when the event fires.\nThis is called when the event fires.\n"},
{id: "SimpleTestCases\\ExtensionMethods.cs", url: "../Tests/SimpleTestCases/ExtensionMethods.cs.out", expectedResult: "ExtensionMethod(<CustomType>)\nExtensionMethod(<CustomType>, <int>)\n"},
{id: "SimpleTestCases\\FieldReturnsInvalidDefaultOnFirstUse.cs", url: "../Tests/SimpleTestCases/FieldReturnsInvalidDefaultOnFirstUse.cs.out", expectedResult: "a\na\n"},
{id: "SimpleTestCases\\Fields.cs", url: "../Tests/SimpleTestCases/Fields.cs.out", expectedResult: "A = 1, B = 0\nA = 1, B = 0\n"},
{id: "SimpleTestCases\\FlagsEnums.cs", url: "../Tests/SimpleTestCases/FlagsEnums.cs.out", expectedResult: "'A' 'A, B, C' 'A, C'\n1 5\n'C' 'A, B, C' 'A, C'\n"},
{id: "SimpleTestCases\\FloatArrayInitializer.cs", url: "../Tests/SimpleTestCases/FloatArrayInitializer.cs.out", expectedResult: "4\n100\n"},
{id: "SimpleTestCases\\GenericCastCharToChar.cs", url: "../Tests/SimpleTestCases/GenericCastCharToChar.cs.out", expectedResult: "a\n"},
{id: "SimpleTestCases\\GenericCastCharToChar2.cs", url: "../Tests/SimpleTestCases/GenericCastCharToChar2.cs.out", expectedResult: "a\nE\n"},
{id: "SimpleTestCases\\GenericCreateInstance.cs", url: "../Tests/SimpleTestCases/GenericCreateInstance.cs.out", expectedResult: "MyClass\n"},
{id: "SimpleTestCases\\GenericFieldInitializer.cs", url: "../Tests/SimpleTestCases/GenericFieldInitializer.cs.out", expectedResult: "GenericStruct`1[System.String]\nGenericStruct`1[System.Int32]\n"},
{id: "SimpleTestCases\\GenericInheritedField.cs", url: "../Tests/SimpleTestCases/GenericInheritedField.cs.out", expectedResult: "null\n"},
{id: "SimpleTestCases\\GenericSelfConstraint.cs", url: "../Tests/SimpleTestCases/GenericSelfConstraint.cs.out", expectedResult: "Bar\nBar\n"},
{id: "SimpleTestCases\\GetEntryAssembly.cs", url: "../Tests/SimpleTestCases/GetEntryAssembly.cs.out", expectedResult: "GetEntryAssembly.cs, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null\n"},
{id: "SimpleTestCases\\GetExecutingAssembly.cs", url: "../Tests/SimpleTestCases/GetExecutingAssembly.cs.out", expectedResult: "GetExecutingAssembly.cs, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null\n"},
{id: "SimpleTestCases\\GetInterfaces.cs", url: "../Tests/SimpleTestCases/GetInterfaces.cs.out", expectedResult: "Implements interface System.Collections.IEnumerable\nImplements interface System.Collections.Generic.IEnumerable`1[System.String]\nImplements interface System.Collections.Generic.ICollection`1[System.String]\nImplements interface System.Collections.Generic.IList`1[System.String]\n"},
{id: "SimpleTestCases\\GetType.cs", url: "../Tests/SimpleTestCases/GetType.cs.out", expectedResult: "CustomType CustomType CustomType2 CustomType2\n"},
{id: "SimpleTestCases\\GetTypeOfBoolean.cs", url: "../Tests/SimpleTestCases/GetTypeOfBoolean.cs.out", expectedResult: "System.Boolean System.Boolean\n"},
{id: "SimpleTestCases\\GetUnderlyingType.cs", url: "../Tests/SimpleTestCases/GetUnderlyingType.cs.out", expectedResult: "System.Nullable`1[System.Double] System.Double\n"},
{id: "SimpleTestCases\\HashSetToArray.cs", url: "../Tests/SimpleTestCases/HashSetToArray.cs.out", expectedResult: "4\n4\n1\n2\n3\n4\n4\n1\n2\n3\n4\n"},
{id: "SimpleTestCases\\HideBaseMethod.cs", url: "../Tests/SimpleTestCases/HideBaseMethod.cs.out", expectedResult: "Foo.Func2\nFoo.Func1\n"},
{id: "SimpleTestCases\\IEEERemainder.cs", url: "../Tests/SimpleTestCases/IEEERemainder.cs.out", expectedResult: "IEEERemainder              Modulus\n3 / 2 =                     -1.0000               1.0000\n4 / 2 =                      0.0000               0.0000\n10 / 3 =                     1.0000               1.0000\n11 / 3 =                    -1.0000               2.0000\n27 / 4 =                    -1.0000               3.0000\n28 / 5 =                    -2.0000               3.0000\n17.8 / 4 =                   1.8000               1.8000\n17.8 / 4.1 =                 1.4000               1.4000\n-16.3 / 4.1 =                0.1000              -4.0000\n17.8 / -4.1 =                1.4000               1.4000\n-17.8 / -4.1 =              -1.4000              -1.4000\n"},
{id: "SimpleTestCases\\If.cs", url: "../Tests/SimpleTestCases/If.cs.out", expectedResult: "true\ntrue\ntrue\n"},
{id: "SimpleTestCases\\IfNull.cs", url: "../Tests/SimpleTestCases/IfNull.cs.out", expectedResult: "null\nnull\n"},
{id: "SimpleTestCases\\IfReferenceBool.cs", url: "../Tests/SimpleTestCases/IfReferenceBool.cs.out", expectedResult: "false\ntrue\n"},
{id: "SimpleTestCases\\IncrementBaseProperty.cs", url: "../Tests/SimpleTestCases/IncrementBaseProperty.cs.out", expectedResult: "A = 0\nA++ = 0\n++A = 2\n"},
{id: "SimpleTestCases\\Indexers.cs", url: "../Tests/SimpleTestCases/Indexers.cs.out", expectedResult: "0, 2\n[2] = 3\n"},
{id: "SimpleTestCases\\InheritedAndOverwrittenMethods.cs", url: "../Tests/SimpleTestCases/InheritedAndOverwrittenMethods.cs.out", expectedResult: "CustomType1.Interface1Method(1) CustomType1.Interface1Method(2)\nCustomType2.Interface1Method(1), Base: CustomType1.Interface1Method(1) CustomType2.Interface1Method(2), Base: CustomType1.Interface1Method(2) CustomType2.Interface1Method(3), Base: CustomType1.Interface1Method(3)\n"},
{id: "SimpleTestCases\\InheritedMethods.cs", url: "../Tests/SimpleTestCases/InheritedMethods.cs.out", expectedResult: "Method\nInheritedMethod\n"},
{id: "SimpleTestCases\\InitFieldsInMain.cs", url: "../Tests/SimpleTestCases/InitFieldsInMain.cs.out", expectedResult: "A = 1, B = hello, C = System.Object\n"},
{id: "SimpleTestCases\\InitializerOnSubStruct.cs", url: "../Tests/SimpleTestCases/InitializerOnSubStruct.cs.out", expectedResult: "1\n2\n\n"},
{id: "SimpleTestCases\\Initializers.cs", url: "../Tests/SimpleTestCases/Initializers.cs.out", expectedResult: "1\n1\n2\n3\n4\n5\n2\n\n"},
{id: "SimpleTestCases\\InnerClassNameInLibrary_Issue352.cs", url: "../Tests/SimpleTestCases/InnerClassNameInLibrary_Issue352.cs.out", expectedResult: "System.Collections.Generic.List`1+Enumerator[[Program+ClassA, InnerClassNameInLibrary_Issue352.cs, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]\n"},
{id: "SimpleTestCases\\Int32CompareExchange.cs", url: "../Tests/SimpleTestCases/Int32CompareExchange.cs.out", expectedResult: "1\n1\n1\n1\n2\n"},
{id: "SimpleTestCases\\Int32OverflowAndUnderflow.cs", url: "../Tests/SimpleTestCases/Int32OverflowAndUnderflow.cs.out", expectedResult: "Signed\n2147483647\n-2147483648\n2147483643\n-2147483644\nUnsigned\n4294967295\n0\n4294967291\n4\n"},
{id: "SimpleTestCases\\IntAndFloatCast.cs", url: "../Tests/SimpleTestCases/IntAndFloatCast.cs.out", expectedResult: "1.5 1 1 1\n"},
{id: "SimpleTestCases\\IntegerDivideTruncation.cs", url: "../Tests/SimpleTestCases/IntegerDivideTruncation.cs.out", expectedResult: "192\n172.8\n"},
{id: "SimpleTestCases\\IntegerRanges.cs", url: "../Tests/SimpleTestCases/IntegerRanges.cs.out", expectedResult: "System.Byte 0 255\nSystem.SByte -128 127\nSystem.UInt16 0 65535\nSystem.Int16 -32768 32767\nSystem.UInt32 0 4294967295\nSystem.Int32 -2147483648 2147483647\n"},
{id: "SimpleTestCases\\IntegerToStringFormatted.cs", url: "../Tests/SimpleTestCases/IntegerToStringFormatted.cs.out", expectedResult: "1234\n1234\n001234\n1234\n1234\n1234\n"},
{id: "SimpleTestCases\\IntegerToStringNullFormat.cs", url: "../Tests/SimpleTestCases/IntegerToStringNullFormat.cs.out", expectedResult: "1234\n"},
{id: "SimpleTestCases\\InterfaceBaseType.cs", url: "../Tests/SimpleTestCases/InterfaceBaseType.cs.out", expectedResult: "\ntrue\n"},
{id: "SimpleTestCases\\InterfaceGenericCall_Issue348.cs", url: "../Tests/SimpleTestCases/InterfaceGenericCall_Issue348.cs.out", expectedResult: "System.Int32\nSystem.Object\n"},
{id: "SimpleTestCases\\InterfaceGenericCallWithGenericParameter_Issue348.cs", url: "../Tests/SimpleTestCases/InterfaceGenericCallWithGenericParameter_Issue348.cs.out", expectedResult: "System.Int32\nSystem.Object\n"},
{id: "SimpleTestCases\\InvokeBaseMethod.cs", url: "../Tests/SimpleTestCases/InvokeBaseMethod.cs.out", expectedResult: "CustomTypeBase.Method\nCustomType.Method\nCustomTypeBase.Method2(3)\nCustomType.Method2(4)\n"},
{id: "SimpleTestCases\\InvokeInheritedOverloadedMethod.cs", url: "../Tests/SimpleTestCases/InvokeInheritedOverloadedMethod.cs.out", expectedResult: ""},
{id: "SimpleTestCases\\IsAssignableFrom.cs", url: "../Tests/SimpleTestCases/IsAssignableFrom.cs.out", expectedResult: "Assignable types:\nA <- C\nA <- D\nB <- F\nC <- D\nE <- G\nI <- E\nI <- F\nI <- G\nI <- J\nI <- K\nI <- L\nI <- M\nI <- N\nK <- L\nM <- N\n"},
{id: "SimpleTestCases\\IsByRef.cs", url: "../Tests/SimpleTestCases/IsByRef.cs.out", expectedResult: "0\n0\n1\n"},
{id: "SimpleTestCases\\IsGenericParameter.cs", url: "../Tests/SimpleTestCases/IsGenericParameter.cs.out", expectedResult: "0\n"},
{id: "SimpleTestCases\\IsInterface.cs", url: "../Tests/SimpleTestCases/IsInterface.cs.out", expectedResult: "0\n1\n"},
{id: "SimpleTestCases\\IsOperator.cs", url: "../Tests/SimpleTestCases/IsOperator.cs.out", expectedResult: "int\nstring\nclass\nwho knows\nclass<int>\nwho knows\nclass<object>\nwho knows\nclass<object>\ninterface<object>\n"},
{id: "SimpleTestCases\\Issue118_1.fs", url: "../Tests/SimpleTestCases/Issue118_1.fs.out", expectedResult: "a\n"},
{id: "SimpleTestCases\\Issue173.cs", url: "../Tests/SimpleTestCases/Issue173.cs.out", expectedResult: "AField\n"},
{id: "SimpleTestCases\\Issue176.cs", url: "../Tests/SimpleTestCases/Issue176.cs.out", expectedResult: "40\n"},
{id: "SimpleTestCases\\Issue194.cs", url: "../Tests/SimpleTestCases/Issue194.cs.out", expectedResult: "Expected 100, actual 100.\nExpected 10, actual 10.\n"},
{id: "SimpleTestCases\\Issue198.fs", url: "../Tests/SimpleTestCases/Issue198.fs.out", expectedResult: ""},
{id: "SimpleTestCases\\Issue205.cs", url: "../Tests/SimpleTestCases/Issue205.cs.out", expectedResult: ""},
{id: "SimpleTestCases\\Issue213.cs", url: "../Tests/SimpleTestCases/Issue213.cs.out", expectedResult: "\n"},
{id: "SimpleTestCases\\Issue239.cs", url: "../Tests/SimpleTestCases/Issue239.cs.out", expectedResult: "\n"},
{id: "SimpleTestCases\\Issue241.cs", url: "../Tests/SimpleTestCases/Issue241.cs.out", expectedResult: "false\n"},
{id: "SimpleTestCases\\Issue242.cs", url: "../Tests/SimpleTestCases/Issue242.cs.out", expectedResult: "[2, aaa]\n[1, qqq]\n"},
{id: "SimpleTestCases\\Issue243.cs", url: "../Tests/SimpleTestCases/Issue243.cs.out", expectedResult: "10\n"},
{id: "SimpleTestCases\\Issue245.cs", url: "../Tests/SimpleTestCases/Issue245.cs.out", expectedResult: ""},
{id: "SimpleTestCases\\Issue247.cs", url: "../Tests/SimpleTestCases/Issue247.cs.out", expectedResult: "1234\n"},
{id: "SimpleTestCases\\Issue248.cs", url: "../Tests/SimpleTestCases/Issue248.cs.out", expectedResult: "2\n"},
{id: "SimpleTestCases\\Issue249.cs", url: "../Tests/SimpleTestCases/Issue249.cs.out", expectedResult: "str\n"},
{id: "SimpleTestCases\\Issue268.cs", url: "../Tests/SimpleTestCases/Issue268.cs.out", expectedResult: "true\ntrue\n"},
{id: "SimpleTestCases\\Issue271.cs", url: "../Tests/SimpleTestCases/Issue271.cs.out", expectedResult: "System.Collections.Generic.List`1[System.Int32] System.Int32[]\nSystem.Int32 System.Int32\n"},
{id: "SimpleTestCases\\Issue298.cs", url: "../Tests/SimpleTestCases/Issue298.cs.out", expectedResult: "5\n"},
{id: "SimpleTestCases\\Issue302.cs", url: "../Tests/SimpleTestCases/Issue302.cs.out", expectedResult: "true\n"},
{id: "SimpleTestCases\\Issue304.cs", url: "../Tests/SimpleTestCases/Issue304.cs.out", expectedResult: "B\nB\nA\n"},
{id: "SimpleTestCases\\Issue305.cs", url: "../Tests/SimpleTestCases/Issue305.cs.out", expectedResult: "Constructor\nTestClass\n"},
{id: "SimpleTestCases\\Issue306.cs", url: "../Tests/SimpleTestCases/Issue306.cs.out", expectedResult: "one\none\nthree\n"},
{id: "SimpleTestCases\\Issue307.cs", url: "../Tests/SimpleTestCases/Issue307.cs.out", expectedResult: "1\n1\n1\n1\nnull\ntrue\nfalse\n"},
{id: "SimpleTestCases\\Issue309.cs", url: "../Tests/SimpleTestCases/Issue309.cs.out", expectedResult: "MyClass\n"},
{id: "SimpleTestCases\\Issue354.cs", url: "../Tests/SimpleTestCases/Issue354.cs.out", expectedResult: "Derived\nDerived2\n"},
{id: "SimpleTestCases\\Issue364_1.cs", url: "../Tests/SimpleTestCases/Issue364_1.cs.out", expectedResult: ""},
{id: "SimpleTestCases\\Issue364_2.cs", url: "../Tests/SimpleTestCases/Issue364_2.cs.out", expectedResult: "Type1\nType2\n"},
{id: "SimpleTestCases\\Issue364_3.cs", url: "../Tests/SimpleTestCases/Issue364_3.cs.out", expectedResult: "Interface1\nInterface2\n"},
{id: "SimpleTestCases\\Issue368.cs", url: "../Tests/SimpleTestCases/Issue368.cs.out", expectedResult: "Base Method\nBase MethodWithParameter1\nBase MethodWithParameter1\nBase MethodWithParameter2\nBase Method\nBase MethodWithParameter1\nBase MethodWithParameter1\nBase MethodWithParameter2\nDerived Method\nBase MethodWithParameter1\nDerived MethodWithParameter1\nDerived MethodWithParameter2\nDerived MethodWithParameter2\n"},
{id: "SimpleTestCases\\Issue372.cs", url: "../Tests/SimpleTestCases/Issue372.cs.out", expectedResult: "15\n"},
{id: "SimpleTestCases\\Issue378_2.cs", url: "../Tests/SimpleTestCases/Issue378_2.cs.out", expectedResult: "One\nTwo\nThree\n"},
{id: "SimpleTestCases\\Issue410.cs", url: "../Tests/SimpleTestCases/Issue410.cs.out", expectedResult: "0\n"},
{id: "SimpleTestCases\\Issue411.cs", url: "../Tests/SimpleTestCases/Issue411.cs.out", expectedResult: "0\n"},
{id: "SimpleTestCases\\Issue425.cs", url: "../Tests/SimpleTestCases/Issue425.cs.out", expectedResult: "true\n"},
{id: "SimpleTestCases\\Issue427.cs", url: "../Tests/SimpleTestCases/Issue427.cs.out", expectedResult: "null\n"},
{id: "SimpleTestCases\\Issue434.cs", url: "../Tests/SimpleTestCases/Issue434.cs.out", expectedResult: "Program+TestStruct\n"},
{id: "SimpleTestCases\\Issue445.cs", url: "../Tests/SimpleTestCases/Issue445.cs.out", expectedResult: "Implementor2<Object,String>.Get\nImplementor2<Object,String>.Get\n"},
{id: "SimpleTestCases\\Issue452.cs", url: "../Tests/SimpleTestCases/Issue452.cs.out", expectedResult: "CustomType\n"},
{id: "SimpleTestCases\\Issue453.cs", url: "../Tests/SimpleTestCases/Issue453.cs.out", expectedResult: ""},
{id: "SimpleTestCases\\Issue459.cs", url: "../Tests/SimpleTestCases/Issue459.cs.out", expectedResult: "hello\nworld\n"},
{id: "SimpleTestCases\\Issue464.cs", url: "../Tests/SimpleTestCases/Issue464.cs.out", expectedResult: "One\nTwo\nThree\n"},
{id: "SimpleTestCases\\Issue466.cs", url: "../Tests/SimpleTestCases/Issue466.cs.out", expectedResult: ""},
{id: "SimpleTestCases\\JaggedArrayReference.cs", url: "../Tests/SimpleTestCases/JaggedArrayReference.cs.out", expectedResult: "2\n2\n3\n4\n6\n7\n"},
{id: "SimpleTestCases\\JaggedStructArrayReference.cs", url: "../Tests/SimpleTestCases/JaggedStructArrayReference.cs.out", expectedResult: "2\n2\n3\n4\n6\n7\n"},
{id: "SimpleTestCases\\ListAddOverride.cs", url: "../Tests/SimpleTestCases/ListAddOverride.cs.out", expectedResult: "GUIElement.AttachToContext\nGUIElement.AttachToContext\n2\n"},
{id: "SimpleTestCases\\ListBinarySearch.cs", url: "../Tests/SimpleTestCases/ListBinarySearch.cs.out", expectedResult: "\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 \n-1\n0\n7\n15\n-21\n"},
{id: "SimpleTestCases\\ListConstructor.cs", url: "../Tests/SimpleTestCases/ListConstructor.cs.out", expectedResult: "0\nString list with 10 elements\n0\nIntlist with 10 elements\n0\nString list with initializer \nzero\none\ntwo\nthree\nString list with array constructor \napple\norange\nplum\nListWith custom Class Initializer\n1.first/1.Second\n2.first/2.Second\n1\n"},
{id: "SimpleTestCases\\ListContains.cs", url: "../Tests/SimpleTestCases/ListContains.cs.out", expectedResult: "1\n1\n0\n1\n"},
{id: "SimpleTestCases\\ListExists.cs", url: "../Tests/SimpleTestCases/ListExists.cs.out", expectedResult: "1\n0\n"},
{id: "SimpleTestCases\\ListFindAll.cs", url: "../Tests/SimpleTestCases/ListFindAll.cs.out", expectedResult: "\nA\nA\nB\nC\nD\n\nA\nA\n\n"},
{id: "SimpleTestCases\\ListForEach.cs", url: "../Tests/SimpleTestCases/ListForEach.cs.out", expectedResult: "zero\none\ntwo\nthree\n"},
{id: "SimpleTestCases\\ListGetEnumerator.cs", url: "../Tests/SimpleTestCases/ListGetEnumerator.cs.out", expectedResult: "a\nb\nc\nd\n"},
{id: "SimpleTestCases\\ListICollection.cs", url: "../Tests/SimpleTestCases/ListICollection.cs.out", expectedResult: "zero\none\ntwo\nthree\n4\n1\n0\n0\nICollection<T>.Add('four)\nzero\none\ntwo\nthree\nfour\nICollection<T>.Remove('one')\nzero\ntwo\nthree\nfour\nICollection<T>.CopyTo\nzero\ntwo\nthree\nfour\nICollection<T>.Clear\n4\n1\n0\n1\n"},
{id: "SimpleTestCases\\ListIList.cs", url: "../Tests/SimpleTestCases/ListIList.cs.out", expectedResult: "----- interface ----\n4\nzero\none\ntwo\nthree\n2\n5\nthree\n4\nthree\nmodified\n----- class ----\n4\nzero\none\ntwo\nthree\n2\n5\nthree\n4\nthree\nmodified\n"},
{id: "SimpleTestCases\\ListIndexOf.cs", url: "../Tests/SimpleTestCases/ListIndexOf.cs.out", expectedResult: "2\n0\n-1\n3\n"},
{id: "SimpleTestCases\\ListIndexOfEnum.cs", url: "../Tests/SimpleTestCases/ListIndexOfEnum.cs.out", expectedResult: "0\n1\n-1\n"},
{id: "SimpleTestCases\\ListInsert.cs", url: "../Tests/SimpleTestCases/ListInsert.cs.out", expectedResult: "2\n0\n3\n4\n0\n5\n3\n2\n"},
{id: "SimpleTestCases\\ListRemoveAll.cs", url: "../Tests/SimpleTestCases/ListRemoveAll.cs.out", expectedResult: "\nA\nA\nB\nC\nD\n2\n\nB\nC\nD\n0\n\nB\nC\nD\n"},
{id: "SimpleTestCases\\ListRemoveRange.cs", url: "../Tests/SimpleTestCases/ListRemoveRange.cs.out", expectedResult: "\nA\nA\nB\nC\nD\n\nA\nB\nC\nD\n\nA\nB\nArgumentOutOfRangeException\nArgumentException\n"},
{id: "SimpleTestCases\\ListRemoveReturnValue.cs", url: "../Tests/SimpleTestCases/ListRemoveReturnValue.cs.out", expectedResult: "Removed 1\n"},
{id: "SimpleTestCases\\ListToArray.cs", url: "../Tests/SimpleTestCases/ListToArray.cs.out", expectedResult: "4\n4\n1\n2\n3\n4\n4\n1\n2\n3\n4\n"},
{id: "SimpleTestCases\\LockTypeObject.cs", url: "../Tests/SimpleTestCases/LockTypeObject.cs.out", expectedResult: "Inside lock\nOutside lock\n"},
{id: "SimpleTestCases\\LotsOfParameters.cs", url: "../Tests/SimpleTestCases/LotsOfParameters.cs.out", expectedResult: "1 2 3 4\n5 6 7 8\n9 10 11 12\n13 14 15 16\n"},
{id: "SimpleTestCases\\MathIntrinsics.cs", url: "../Tests/SimpleTestCases/MathIntrinsics.cs.out", expectedResult: "-1\n0\n0\n1\n0.5\n1.4142136\n0.4794255\n0.8775826\n0.5235988\n1.0471976\n0.5463025\n0.4636476\n2.8198421\n4.6051702\n2\n2\n2.8613531\n-1\n125\n20.0855369\n"},
{id: "SimpleTestCases\\MemberRefMangledNames.cs", url: "../Tests/SimpleTestCases/MemberRefMangledNames.cs.out", expectedResult: "0\n1\n"},
{id: "SimpleTestCases\\MemberRefParameters.cs", url: "../Tests/SimpleTestCases/MemberRefParameters.cs.out", expectedResult: "a = 0\na = 1\n"},
{id: "SimpleTestCases\\MethodReferences.cs", url: "../Tests/SimpleTestCases/MethodReferences.cs.out", expectedResult: "A = 1\nA = 2\n"},
{id: "SimpleTestCases\\MultiDimArrayClone.cs", url: "../Tests/SimpleTestCases/MultiDimArrayClone.cs.out", expectedResult: "1\n0\n0\n0\n0\n0\n0\n2\n"},
{id: "SimpleTestCases\\MultiDimArrays.cs", url: "../Tests/SimpleTestCases/MultiDimArrays.cs.out", expectedResult: "x=0, y=0\nx=1, y=0\nx=2, y=0\nx=3, y=0\nx=4, y=0\nx=5, y=0\nx=6, y=0\nx=7, y=0\nx=8, y=0\nx=9, y=0\nx=0, y=1\nx=1, y=1\nx=2, y=1\nx=3, y=1\nx=4, y=1\nx=5, y=1\nx=6, y=1\nx=7, y=1\nx=8, y=1\nx=9, y=1\nx=0, y=2\nx=1, y=2\nx=2, y=2\nx=3, y=2\nx=4, y=2\nx=5, y=2\nx=6, y=2\nx=7, y=2\nx=8, y=2\nx=9, y=2\nx=0, y=3\nx=1, y=3\nx=2, y=3\nx=3, y=3\nx=4, y=3\nx=5, y=3\nx=6, y=3\nx=7, y=3\nx=8, y=3\nx=9, y=3\nx=0, y=4\nx=1, y=4\nx=2, y=4\nx=3, y=4\nx=4, y=4\nx=5, y=4\nx=6, y=4\nx=7, y=4\nx=8, y=4\nx=9, y=4\n"},
{id: "SimpleTestCases\\MultipleCatchClauses.cs", url: "../Tests/SimpleTestCases/MultipleCatchClauses.cs.out", expectedResult: "Caught CustomException\nCaught Unknown\nFallthrough\n"},
{id: "SimpleTestCases\\Mutate2DArray.cs", url: "../Tests/SimpleTestCases/Mutate2DArray.cs.out", expectedResult: "1\n4\n3\n4\n5\n3\n"},
{id: "SimpleTestCases\\NamespacedTypes.cs", url: "../Tests/SimpleTestCases/NamespacedTypes.cs.out", expectedResult: "A.A\nB.A\n"},
{id: "SimpleTestCases\\NestedInitializer.cs", url: "../Tests/SimpleTestCases/NestedInitializer.cs.out", expectedResult: "PickupItem(item=representedItem, mapposition=gridPosition)\ntrue\n"},
{id: "SimpleTestCases\\NestedLambdas.cs", url: "../Tests/SimpleTestCases/NestedLambdas.cs.out", expectedResult: "a=8, b=16, c=64\n"},
{id: "SimpleTestCases\\NestedNamespaces.cs", url: "../Tests/SimpleTestCases/NestedNamespaces.cs.out", expectedResult: "StaticMethod\n"},
{id: "SimpleTestCases\\NestedSwitchStatement.cs", url: "../Tests/SimpleTestCases/NestedSwitchStatement.cs.out", expectedResult: "1\n1\n"},
{id: "SimpleTestCases\\NullableCloneParameter_Issue316.cs", url: "../Tests/SimpleTestCases/NullableCloneParameter_Issue316.cs.out", expectedResult: "10\n0\n"},
{id: "SimpleTestCases\\NullableCompoundAssignment.cs", url: "../Tests/SimpleTestCases/NullableCompoundAssignment.cs.out", expectedResult: ""},
{id: "SimpleTestCases\\NullableField_Issue316.cs", url: "../Tests/SimpleTestCases/NullableField_Issue316.cs.out", expectedResult: "NonEmpty HasValue\nNonEmpty NotNull\nNonEmpty Is Int\nNonEmpty Is Int?\n"},
{id: "SimpleTestCases\\NullableGeneric.cs", url: "../Tests/SimpleTestCases/NullableGeneric.cs.out", expectedResult: "Non-Nullable\nNullable\nTrue\n"},
{id: "SimpleTestCases\\NullableGetType.cs", url: "../Tests/SimpleTestCases/NullableGetType.cs.out", expectedResult: "System.Int32\nthrew NullReferenceException\n"},
{id: "SimpleTestCases\\NullableModification_Issue361.cs", url: "../Tests/SimpleTestCases/NullableModification_Issue361.cs.out", expectedResult: "0\n0\n"},
{id: "SimpleTestCases\\NullableStructRef.cs", url: "../Tests/SimpleTestCases/NullableStructRef.cs.out", expectedResult: "1\n2\n"},
{id: "SimpleTestCases\\NullCoalescing.cs", url: "../Tests/SimpleTestCases/NullCoalescing.cs.out", expectedResult: "1\n2\n1\n2\n1\n2\n1\n2\n"},
{id: "SimpleTestCases\\ObjectExpression_Enumerable.fs", url: "../Tests/SimpleTestCases/ObjectExpression_Enumerable.fs.out", expectedResult: ""},
{id: "SimpleTestCases\\Operators.cs", url: "../Tests/SimpleTestCases/Operators.cs.out", expectedResult: "0\n-1\n-1\n-2\n-1\n-1\n0\n+ 3 - -1 / 2 * 8\n% 1 & 1 | 3 ^ 2\n! False ~ -1 ~ 0 - -1\n"},
{id: "SimpleTestCases\\OutParameters.cs", url: "../Tests/SimpleTestCases/OutParameters.cs.out", expectedResult: "a = 0\na = 1\na = 1, b = 2\n"},
{id: "SimpleTestCases\\OverloadedConstructorDelegation.cs", url: "../Tests/SimpleTestCases/OverloadedConstructorDelegation.cs.out", expectedResult: "initialized only from ctor 0 typecreateElement\nnull 5\n"},
{id: "SimpleTestCases\\OverloadedConstructors.cs", url: "../Tests/SimpleTestCases/OverloadedConstructors.cs.out", expectedResult: "CustomType(<void>)\nCustomType(<int>)\nCustomType(<string>)\n"},
{id: "SimpleTestCases\\OverloadedMethods.cs", url: "../Tests/SimpleTestCases/OverloadedMethods.cs.out", expectedResult: "OverloadedMethod(<void>)\nOverloadedMethod(<int>)\nOverloadedMethod(<string>)\nOverloadedMethod(<int>)\n"},
{id: "SimpleTestCases\\OverloadedMixedGenericAndNonGeneric.cs", url: "../Tests/SimpleTestCases/OverloadedMixedGenericAndNonGeneric.cs.out", expectedResult: "IsNullOrEmpty with 1 parameters\nDone\n"},
{id: "SimpleTestCases\\OverloadedProperties.cs", url: "../Tests/SimpleTestCases/OverloadedProperties.cs.out", expectedResult: "2 8\n"},
{id: "SimpleTestCases\\OverloadedVirtualMethods.cs", url: "../Tests/SimpleTestCases/OverloadedVirtualMethods.cs.out", expectedResult: "B.M(string s)\nA.M(int i)\nB.M(float f)\nB.M(string s)\nA.M(int i)\nB.M(float f)\nD.M(string s)\nA.M(int i)\nD.M(float f)\nA.M(string s)\nA.M(int i)\nE.M(float f)\n"},
{id: "SimpleTestCases\\OverloadWithDelegate.cs", url: "../Tests/SimpleTestCases/OverloadWithDelegate.cs.out", expectedResult: "OverloadedMethod(<Action>)\n_Action\nOverloadedMethod(<Action<int>>)\n_Action<int>(1)\nOverloadedMethod(<CustomDelegate>)\n_CustomDelegate<float>(1.5)\n"},
{id: "SimpleTestCases\\OverloadWithRefArray.cs", url: "../Tests/SimpleTestCases/OverloadWithRefArray.cs.out", expectedResult: "OverloadedMethod(<byte[1]>)\nOverloadedMethod(<ref byte[1]>)\n"},
{id: "SimpleTestCases\\ParameterNamedThis.cs", url: "../Tests/SimpleTestCases/ParameterNamedThis.cs.out", expectedResult: "this=A, @this=1\n"},
{id: "SimpleTestCases\\ParseHexInteger.cs", url: "../Tests/SimpleTestCases/ParseHexInteger.cs.out", expectedResult: "0\n50\n"},
{id: "SimpleTestCases\\ParseInteger.cs", url: "../Tests/SimpleTestCases/ParseInteger.cs.out", expectedResult: "-32\n0\n32\n"},
{id: "SimpleTestCases\\PrivateMoveNext.cs", url: "../Tests/SimpleTestCases/PrivateMoveNext.cs.out", expectedResult: "aaaa\nbbb\n"},
{id: "SimpleTestCases\\PropertyMultipleAssignment.cs", url: "../Tests/SimpleTestCases/PropertyMultipleAssignment.cs.out", expectedResult: "A=1, B=1, C=1\nA=2, B=1, C=2\n"},
{id: "SimpleTestCases\\RecursiveArrayInitializer.cs", url: "../Tests/SimpleTestCases/RecursiveArrayInitializer.cs.out", expectedResult: "1=3, 2=2.5, 3=16\n"},
{id: "SimpleTestCases\\RecursiveConstructorInheritance.cs", url: "../Tests/SimpleTestCases/RecursiveConstructorInheritance.cs.out", expectedResult: "<Base A=1 B=2>\n<Base A=5 B=2>\n<Base A=5 B=6>\n<Derived A=1 B=2 C=3>\n<Derived A=1 B=2 C=7>\n<Derived A=5 B=6 C=7>\n"},
{id: "SimpleTestCases\\RecursiveTypeConstruction_Issue394.cs", url: "../Tests/SimpleTestCases/RecursiveTypeConstruction_Issue394.cs.out", expectedResult: "Type=Program+Foo\n"},
{id: "SimpleTestCases\\RefDouble.cs", url: "../Tests/SimpleTestCases/RefDouble.cs.out", expectedResult: "1 2\n2.5 3.5\n"},
{id: "SimpleTestCases\\ReflectionGenericMethodInfoProperties.cs", url: "../Tests/SimpleTestCases/ReflectionGenericMethodInfoProperties.cs.out", expectedResult: "IsGenericMethod: False\nIsGenericMethodDefinition: False\nContainsGenericParameters: False\n\nIsGenericMethod: True\nIsGenericMethodDefinition: True\nContainsGenericParameters: True\n\nIsGenericMethod: True\nIsGenericMethodDefinition: False\nContainsGenericParameters: False\n\nIsGenericMethod: False\nIsGenericMethodDefinition: False\nContainsGenericParameters: True\n\nIsGenericMethod: False\nIsGenericMethodDefinition: False\nContainsGenericParameters: True\n\nIsGenericMethod: False\nIsGenericMethodDefinition: False\nContainsGenericParameters: True\n\nIsGenericMethod: False\nIsGenericMethodDefinition: False\nContainsGenericParameters: True\n\nIsGenericMethod: True\nIsGenericMethodDefinition: True\nContainsGenericParameters: True\n\nIsGenericMethod: True\nIsGenericMethodDefinition: False\nContainsGenericParameters: True\n\nIsGenericMethod: False\nIsGenericMethodDefinition: False\nContainsGenericParameters: True\n\nIsGenericMethod: False\nIsGenericMethodDefinition: False\nContainsGenericParameters: True\n\nIsGenericMethod: False\nIsGenericMethodDefinition: False\nContainsGenericParameters: True\n\nIsGenericMethod: False\nIsGenericMethodDefinition: False\nContainsGenericParameters: True\n\nIsGenericMethod: True\nIsGenericMethodDefinition: True\nContainsGenericParameters: True\n\nIsGenericMethod: True\nIsGenericMethodDefinition: False\nContainsGenericParameters: True\n\nIsGenericMethod: False\nIsGenericMethodDefinition: False\nContainsGenericParameters: True\n\nIsGenericMethod: False\nIsGenericMethodDefinition: False\nContainsGenericParameters: True\n\nIsGenericMethod: True\nIsGenericMethodDefinition: True\nContainsGenericParameters: True\n\nIsGenericMethod: True\nIsGenericMethodDefinition: False\nContainsGenericParameters: True\n\nIsGenericMethod: False\nIsGenericMethodDefinition: False\nContainsGenericParameters: False\n\nIsGenericMethod: False\nIsGenericMethodDefinition: False\nContainsGenericParameters: False\n\nIsGenericMethod: False\nIsGenericMethodDefinition: False\nContainsGenericParameters: False\n\nIsGenericMethod: False\nIsGenericMethodDefinition: False\nContainsGenericParameters: False\n\nIsGenericMethod: True\nIsGenericMethodDefinition: True\nContainsGenericParameters: True\n\nIsGenericMethod: True\nIsGenericMethodDefinition: False\nContainsGenericParameters: False\n\nIsGenericMethod: False\nIsGenericMethodDefinition: False\nContainsGenericParameters: False\n\nIsGenericMethod: False\nIsGenericMethodDefinition: False\nContainsGenericParameters: False\n\nIsGenericMethod: True\nIsGenericMethodDefinition: True\nContainsGenericParameters: True\n\nIsGenericMethod: True\nIsGenericMethodDefinition: False\nContainsGenericParameters: False\n\nIsGenericMethod: False\nIsGenericMethodDefinition: False\nContainsGenericParameters: True\n\n"},
{id: "SimpleTestCases\\ReflectionGenericMethodInvoke.cs", url: "../Tests/SimpleTestCases/ReflectionGenericMethodInvoke.cs.out", expectedResult: "true\nString\nTestString4\nString\nTestString5\nInt32\n6\nInt32\n7\nString\nTestString1\nfield\nString\nTestString2\nfield\nInt32\n3\nfield\nInt32\n4\nfield\nInt32\nString\nTestString8\nfield\nInt32\nString\nTestString9\nfield\nInt32\nInt32\n10\nfield\nInt32\nInt32\n11\nfield\nString\nTestString12\nfield\nString\nTestString13\nfield\nInt32\n14\nfield\nInt32\n15\nfield\nString\nString\nTestString16\nfield\nString\nString\nTestString17\nfield\nString\nInt32\n18\nfield\nString\nInt32\n19\nfield\nString\nString\nTestString20\nfield\nString\nString\nTestString21\nfield\nString\nInt32\n22\nfield\nString\nInt32\n23\nfield\n"},
{id: "SimpleTestCases\\ReflectionInterfaceMethodInvoke.cs", url: "../Tests/SimpleTestCases/ReflectionInterfaceMethodInvoke.cs.out", expectedResult: "field\nfield\n"},
{id: "SimpleTestCases\\ReflectionInvokeStructParameters_Issue449.cs", url: "../Tests/SimpleTestCases/ReflectionInvokeStructParameters_Issue449.cs.out", expectedResult: "TestDefaultStruct0\nValue not default\nExpected exception: 0 parameters\nExpected exception: 2 parameters\nTestNoArgs\nTestNoArgs\nExpected exception: NoArg - 1 parameter\n"},
{id: "SimpleTestCases\\ReflectionMemberType.cs", url: "../Tests/SimpleTestCases/ReflectionMemberType.cs.out", expectedResult: "Constructor\nField\nProperty\nEvent\nMethod\n"},
{id: "SimpleTestCases\\ReflectionMethodArgumentTypes.cs", url: "../Tests/SimpleTestCases/ReflectionMethodArgumentTypes.cs.out", expectedResult: "A3\nA4\nA1\nA1\nA2\nB4\nB3\nB1\nB2\nB1\nB4\nB3\nB1\nB2\nB1\nC4\nQ\nC3\nC1\nC2\nQ\nC1\nC4\nC3\nB1\nB2\nB1\nC4\nQ\nC3\nC1\nC2\nQ\nC1\n"},
{id: "SimpleTestCases\\ReflectionTypeGenericInfo.cs", url: "../Tests/SimpleTestCases/ReflectionTypeGenericInfo.cs.out", expectedResult: "1 IGT: True\n1 IGTD: True\n1 CGP: True\n1 IGP: False\n2 IGT: True\n2 IGTD: True\n2 CGP: True\n2 IGP: False\n3 IGT: True\n3 IGTD: False\n3 CGP: True\n3 IGP: False\n4 IGT: False\n4 IGTD: False\n4 CGP: True\n4 IGP: True\n5 IGT: True\n5 IGTD: False\n5 CGP: True\n5 IGP: False\n6 IGT: True\n6 IGTD: False\n6 CGP: True\n6 IGP: False\n7 IGT: True\n7 IGTD: True\n7 CGP: True\n7 IGP: False\n8 IGT: True\n8 IGTD: False\n8 CGP: False\n8 IGP: False\n9 IGT: True\n9 IGTD: False\n9 CGP: False\n9 IGP: False\n10 IGT: True\n10 IGTD: False\n10 CGP: False\n10 IGP: False\n11 IGT: False\n11 IGTD: False\n11 CGP: False\n11 IGP: False\n12 IGT: True\n12 IGTD: False\n12 CGP: False\n12 IGP: False\n14 IGT: True\n14 IGTD: False\n14 CGP: False\n14 IGP: False\n15 IGT: False\n15 IGTD: False\n15 CGP: False\n15 IGP: False\n"},
{id: "SimpleTestCases\\ReturnNestedCasts.cs", url: "../Tests/SimpleTestCases/ReturnNestedCasts.cs.out", expectedResult: "0 0\n"},
{id: "SimpleTestCases\\SelfTypedFields.cs", url: "../Tests/SimpleTestCases/SelfTypedFields.cs.out", expectedResult: "Value=0\nValue=1\nValue=1\nValue=0\n"},
{id: "SimpleTestCases\\StaticConstructorAndFieldAccess.cs", url: "../Tests/SimpleTestCases/StaticConstructorAndFieldAccess.cs.out", expectedResult: "StaticField = 2\nHasTCctorRun = True\n"},
{id: "SimpleTestCases\\StaticConstructorAndFieldAccess2.cs", url: "../Tests/SimpleTestCases/StaticConstructorAndFieldAccess2.cs.out", expectedResult: "StaticField = 3\n"},
{id: "SimpleTestCases\\StaticMemberRefParameters.cs", url: "../Tests/SimpleTestCases/StaticMemberRefParameters.cs.out", expectedResult: "a = 0\na = 1, a + 1 = 2\na = 3\n"},
{id: "SimpleTestCases\\StringCharacters.cs", url: "../Tests/SimpleTestCases/StringCharacters.cs.out", expectedResult: "abcd a b d\n"},
{id: "SimpleTestCases\\StringCompare.cs", url: "../Tests/SimpleTestCases/StringCompare.cs.out", expectedResult: "0\n0\n-1\n0\n-1\n-1\n-1\n-1\n"},
{id: "SimpleTestCases\\StringContains.cs", url: "../Tests/SimpleTestCases/StringContains.cs.out", expectedResult: "1\n1\n0\n1\n"},
{id: "SimpleTestCases\\StringEquals.cs", url: "../Tests/SimpleTestCases/StringEquals.cs.out", expectedResult: "1\n"},
{id: "SimpleTestCases\\StringFormatAlignment.cs", url: "../Tests/SimpleTestCases/StringFormatAlignment.cs.out", expectedResult: "1234\n12.34\n1234\n12.34\n  1234\n 12.34\n1234\n12.34\n1234  \n12.34 \n"},
{id: "SimpleTestCases\\StringFormatCurlies.cs", url: "../Tests/SimpleTestCases/StringFormatCurlies.cs.out", expectedResult: "Input string was not in a correct format.\n{hello world}\n"},
{id: "SimpleTestCases\\StringFormatCustomPlaces.cs", url: "../Tests/SimpleTestCases/StringFormatCustomPlaces.cs.out", expectedResult: "1234, 123456\n1234, 123456\n001234, 123456\n1234, 123456\n1234, 123456\n1234, 123456\n"},
{id: "SimpleTestCases\\StringFormatCustomPlacesDecimal.cs", url: "../Tests/SimpleTestCases/StringFormatCustomPlacesDecimal.cs.out", expectedResult: "1234.00, 123456.00\n1234.0000, 123456.0000\n001234.000000, 123456.000000\n1234.56, 12.35\n1234.5600, 0012.3456\n001234.560000, 000012.345600\n1234, 123456\n1234, 123456\n1234, 123456\n1234.56, 12.35\n1234.56, 12.3456\n1234.56, 12.3456\n"},
{id: "SimpleTestCases\\StringFormatCustomPlacesNegative.cs", url: "../Tests/SimpleTestCases/StringFormatCustomPlacesNegative.cs.out", expectedResult: "-1234, -123456\n-1234, -123456\n-001234, -123456\n-1234, -123456\n-1234, -123456\n-1234, -123456\n-001.337\n"},
{id: "SimpleTestCases\\StringFormatD.cs", url: "../Tests/SimpleTestCases/StringFormatD.cs.out", expectedResult: "1234\n123456\n1234\n123456\n001234\n123456\n"},
{id: "SimpleTestCases\\StringFormatF.cs", url: "../Tests/SimpleTestCases/StringFormatF.cs.out", expectedResult: "1234.00\n12.34\n1234.0000\n12.3400\n"},
{id: "SimpleTestCases\\StringFormatN.cs", url: "../Tests/SimpleTestCases/StringFormatN.cs.out", expectedResult: "1,234.00\n12.34\n1,234.0000\n12.3400\n12,345.0000\n123,456.0000\n1,234,567.0000\n"},
{id: "SimpleTestCases\\StringFormatPlaceSeparators.cs", url: "../Tests/SimpleTestCases/StringFormatPlaceSeparators.cs.out", expectedResult: "1,234 12,345 123,456\n1,234 12,345 123,456\n001,234 012,345 123,456\n1,234 12,345 123,456\n1,234 12,345 123,456\n1,234 12,345 123,456\n"},
{id: "SimpleTestCases\\StringFormatQuotedString.cs", url: "../Tests/SimpleTestCases/StringFormatQuotedString.cs.out", expectedResult: "1234.00 hello, 1234.56 hello\n1234.00 hello, 1234.56 hello\n1234.00 hel\"lo, 1234.56 hel\"lo\n1234.00 hel'lo, 1234.56 hel'lo\n"},
{id: "SimpleTestCases\\StringFormatX.cs", url: "../Tests/SimpleTestCases/StringFormatX.cs.out", expectedResult: "4d2\n1e240\nfffe1dc0\n4d2\n1e240\nfffe1dc0\n0004d2\n01e240\nfffe1dc0\n0004D2\n01E240\nFFFE1DC0\n"},
{id: "SimpleTestCases\\StringFromCharArray.cs", url: "../Tests/SimpleTestCases/StringFromCharArray.cs.out", expectedResult: "4\na\nabc\n0\n"},
{id: "SimpleTestCases\\StringGetHashCode.cs", url: "../Tests/SimpleTestCases/StringGetHashCode.cs.out", expectedResult: ""},
{id: "SimpleTestCases\\StringIndexOf.cs", url: "../Tests/SimpleTestCases/StringIndexOf.cs.out", expectedResult: "0\n1\n6\n7\n6\n1\n-1\n0\n1\n6\n7\n6\n1\n-1\n"},
{id: "SimpleTestCases\\StringIsNullOrEmpty.cs", url: "../Tests/SimpleTestCases/StringIsNullOrEmpty.cs.out", expectedResult: "1\n1\n0\n1\n1\n0\n"},
{id: "SimpleTestCases\\StringJoinEnumerable.cs", url: "../Tests/SimpleTestCases/StringJoinEnumerable.cs.out", expectedResult: "Foo; Bar; Baz; Qux\n"},
{id: "SimpleTestCases\\StringLastIndexOf.cs", url: "../Tests/SimpleTestCases/StringLastIndexOf.cs.out", expectedResult: "6\n7\n-1\n6\n7\n-1\n"},
{id: "SimpleTestCases\\StringLowerAndUpper.cs", url: "../Tests/SimpleTestCases/StringLowerAndUpper.cs.out", expectedResult: "abc\nabc\nabc\nABC\nABC\nABC\nabc\nabc\nabc\nABC\nABC\nABC\n"},
{id: "SimpleTestCases\\StringPad.cs", url: "../Tests/SimpleTestCases/StringPad.cs.out", expectedResult: "abc\nabc\nabc\nabc  \nabc\nabc\nddabc\nabc\nabc\nabcdd\nabc\nabc\n"},
{id: "SimpleTestCases\\StringRemove.cs", url: "../Tests/SimpleTestCases/StringRemove.cs.out", expectedResult: "\nabc\nacdefg\nadefg\n\n"},
{id: "SimpleTestCases\\StringReplace.cs", url: "../Tests/SimpleTestCases/StringReplace.cs.out", expectedResult: "cbadefcbadef\nwbcdefwbcdef\n"},
{id: "SimpleTestCases\\StringSplit.cs", url: "../Tests/SimpleTestCases/StringSplit.cs.out", expectedResult: "2\nabc\ndefg\nThis\nis\na\nlist\nof\nwords\nwith\na\nbit\nof\npunctuation\nand\na\ntab\ncharacter\n"},
{id: "SimpleTestCases\\StringSplitDefaultSeparators.cs", url: "../Tests/SimpleTestCases/StringSplitDefaultSeparators.cs.out", expectedResult: "4\nabc\ndef\nghi\njkl\n"},
{id: "SimpleTestCases\\StringStartsAndEndsWith.cs", url: "../Tests/SimpleTestCases/StringStartsAndEndsWith.cs.out", expectedResult: "1\n0\n1\n0\n"},
{id: "SimpleTestCases\\StringSubstring.cs", url: "../Tests/SimpleTestCases/StringSubstring.cs.out", expectedResult: "abcdefg\ndefg\nd\nabc\nThe initial values in the array are:\nName: Felica Walker\nTitle: Mz.\nAge: 47\nLocation: Paris\nGender: F\nWe want to retrieve only the key information. That is:\nFelica Walker\nMz.\n47\nParis\nF\n"},
{id: "SimpleTestCases\\StringToCharArray.cs", url: "../Tests/SimpleTestCases/StringToCharArray.cs.out", expectedResult: "A\nB\nC\nD\n"},
{id: "SimpleTestCases\\StringTrim.cs", url: "../Tests/SimpleTestCases/StringTrim.cs.out", expectedResult: "abc\nabc\nabc\nabc\n"},
{id: "SimpleTestCases\\StructGenericParameterReferenceEquality.cs", url: "../Tests/SimpleTestCases/StructGenericParameterReferenceEquality.cs.out", expectedResult: "false\nfalse\n"},
{id: "SimpleTestCases\\StructHoistingInComplexLoop.cs", url: "../Tests/SimpleTestCases/StructHoistingInComplexLoop.cs.out", expectedResult: "0={8, 8}\n1={24, 8}\n2={40, 8}\n3={56, 8}\n4={8, 24}\n5={24, 24}\n6={40, 24}\n7={56, 24}\n8={8, 40}\n9={24, 40}\n10={40, 40}\n11={56, 40}\n12={8, 56}\n13={24, 56}\n14={40, 56}\n15={56, 56}\n"},
{id: "SimpleTestCases\\TruncationRoundToZero.cs", url: "../Tests/SimpleTestCases/TruncationRoundToZero.cs.out", expectedResult: "0\n0\n1\n-1\n"},
{id: "SimpleTestCases\\TryCastDelegate.cs", url: "../Tests/SimpleTestCases/TryCastDelegate.cs.out", expectedResult: "PrintNumber(1)\nPrintNumber(2)\n"},
{id: "SimpleTestCases\\TryCastGenericDelegate.cs", url: "../Tests/SimpleTestCases/TryCastGenericDelegate.cs.out", expectedResult: "PrintNumber(1)\nPrintNumber(2)\n"},
{id: "SimpleTestCases\\TryCatch.cs", url: "../Tests/SimpleTestCases/TryCatch.cs.out", expectedResult: "Caught: System.Exception: Error\r\n"},
{id: "SimpleTestCases\\Type.cs", url: "../Tests/SimpleTestCases/Type.cs.out", expectedResult: "Namespace: System\nName: Object\nFullName: System.Object\nAssemblyQualifiedName: System.Object, JSIL.Core\nAttributes: ReferenceType NotArray NotGenericType NotGenericTypeDefinition NotEnum \nNamespace: System\nName: Int32[]\nFullName: System.Int32[]\nAssemblyQualifiedName: System.Int32[], JSIL.Core\nAttributes: ReferenceType Array NotGenericType NotGenericTypeDefinition NotEnum \nNamespace: Namespace\nName: Class\nFullName: Namespace.Class\nAssemblyQualifiedName: Namespace.Class, Type.cs, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null\nAttributes: ReferenceType NotArray NotGenericType NotGenericTypeDefinition NotEnum \nNamespace: Namespace\nName: Enum\nFullName: Namespace.Enum\nAssemblyQualifiedName: Namespace.Enum, Type.cs, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null\nAttributes: ValueType NotArray NotGenericType NotGenericTypeDefinition Enum \nNamespace: Namespace\nName: GenericClass`1\nFullName: Namespace.GenericClass`1[[Namespace.Class, Type.cs, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]\nAssemblyQualifiedName: Namespace.GenericClass`1[[Namespace.Class, Type.cs, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], Type.cs, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null\nGenericTypeDefinition: GenericClass`1\nAttributes: ReferenceType NotArray GenericType NotGenericTypeDefinition NotEnum \nNamespace: Namespace\nName: GenericClass`1\nFullName: Namespace.GenericClass`1\nAssemblyQualifiedName: Namespace.GenericClass`1, Type.cs, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null\nGenericTypeDefinition: GenericClass`1\nAttributes: ReferenceType NotArray GenericType GenericTypeDefinition NotEnum \n"},
{id: "SimpleTestCases\\TypeCasts.cs", url: "../Tests/SimpleTestCases/TypeCasts.cs.out", expectedResult: "1\nb\n"},
{id: "SimpleTestCases\\TypedArrayEnumerator_Issue353.cs", url: "../Tests/SimpleTestCases/TypedArrayEnumerator_Issue353.cs.out", expectedResult: "a\nb\n"},
{id: "SimpleTestCases\\TypeQualifiedPropertyInNestedType.cs", url: "../Tests/SimpleTestCases/TypeQualifiedPropertyInNestedType.cs.out", expectedResult: "0, 0\n0, 1\n1, 1\n"},
{id: "SimpleTestCases\\UnboxBoolean.cs", url: "../Tests/SimpleTestCases/UnboxBoolean.cs.out", expectedResult: "OK\n"},
{id: "SimpleTestCases\\UsingBlocks.cs", url: "../Tests/SimpleTestCases/UsingBlocks.cs.out", expectedResult: "new TestClass()\nBody\nTestClass.Dispose()\n"},
{id: "SimpleTestCases\\VarArgs.cs", url: "../Tests/SimpleTestCases/VarArgs.cs.out", expectedResult: "count=3\nSum of test is 23\n"},
{id: "SimpleTestCases\\VarianceCast_Issue443.cs", url: "../Tests/SimpleTestCases/VarianceCast_Issue443.cs.out", expectedResult: "Covarint downcast expected exception\nGet:BaseClass\nCovarint interface cast successful\nGet:BaseClass\nCovarint upast successful\nContravarinat upcast expected exception\nSet+BaseClass, DerivedClass\nContravarinat interface cast successful\nSet+BaseClass, DerivedClass\nContravarinat downcat successful\n"},
{id: "SimpleTestCases\\VirtualBaseProperties.cs", url: "../Tests/SimpleTestCases/VirtualBaseProperties.cs.out", expectedResult: "Exception of type 'DerivedException' was thrown.!\nException of type 'TwiceDerivedException' was thrown.!\nException of type 'ThriceDerivedException' was thrown.!?\n"},

];